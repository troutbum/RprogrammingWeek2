mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
# Compressed code for Questions 18-20
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(complete.data, Month == 5)[,"Ozone"])  # need NA removed dataset for max()
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
# Compressed code for Questions 18-20
# (matches previous results)
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(complete.data, Month == 5)[,"Ozone"])  # need NA removed dataset for max()
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
setwd("~/RprogrammingWeek2")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
?cor
View(cr)
View(cr)
View(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
View(cr)
directory <- "specdata"
path <- paste(directory,"/", sep = "")  # full path to datafile directory
files <- list.files(path, pattern="*.csv")  # create list of data files
StnList <- complete(directory)
StnListAbove <- subset(StnList, nobs > threshold)
threshold <- 150
StnListAbove <- subset(StnList, nobs > threshold)
View(StnListAbove)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
directory <- "specdata"
threshold <- 150
StnList <- complete(directory)               # returns stations and their good obs
StnListAbove <- subset(StnList, nobs > threshold)
path <- paste(directory,"/", sep = "")  # full path to datafile directory
files <- list.files(path, pattern="*.csv")  # create list of data files
View(StnListAbove)
View(StnListAbove)
StnIDs <- StnListAbove[,"id"]
tail(StnIDs)
View(StnList)
View(StnListAbove)
View(StnListAbove)
View(StnList)
SortedStnList <- StnList[order(id),]
SortedStnList <- StnList[order("id"),]
View(SortedStnList)
dd[ order(-dd[,4], dd[,1]), ]
SortedStnList <- StnList[order(StnList[,"id"]),]
View(SortedStnList)
View(StnList)
tail(files)
head(files)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
directory <- "specdata"
threshold <- 150
StnList <- complete(directory)                    # returns stations and their good obs
StnListAbove <- subset(StnList, nobs > threshold) # station above threholds
StnIDs <- StnListAbove[,"id"]                     # vector of Station IDs to analyze
SortedIDs <- SortedIDs[order(SortedIDs[,"id"]),]  # sort output by ID number
SortedIDs <- StnIDs[order(StnIDs[,"id"]),]        # sort output by ID number
StnsAbove <- subset(StnList, nobs > threshold) # station above threholds
SortedSLA <- StnsAbove[order(StnsAbove[,"id"]),]
View(StnsAbove)
View(SortedSLA)
directory <- "specdata"
threshold <- 150
StnList <- complete(directory)                    # returns stations and their good obs
StnsAbove <- subset(StnList, nobs > threshold)    # station above threholds
SortedStns <- StnsAbove[order(StnsAbove[,"id"]),]  # sort output by ID number
StnIDs <- SortedStns[,"id"]                     # vector of Station IDs to analyze
source("complete.R")
StnList <- complete(directory)                    # returns stations and their good obs
StnsAbove <- subset(StnList, nobs > threshold)    # station above threholds
SortedStns <- StnsAbove[order(StnsAbove[,"id"]),]  # sort output by ID number
StnIDs <- SortedStns[,"id"]                     # vector of Station IDs to analyze
path <- paste(directory,"/", sep = "")            # full path to datafile directory
files <- list.files(path, pattern="*.csv")
for(file in files[StnIDs])                            # import each selected CSV file
{
print(files(StnIDs))
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
for(file in files[StnIDs])                            # import each selected CSV file
{
print(files[StnIDs])
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
for(file in files[StnIDs])                            # import each selected CSV file
{
print(file[StnIDs])
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
files[6]
print(files[6])
for(i in files[StnIDs])                            # import each selected CSV file
{
print(files[StnIDs])
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
for(i in files[StnIDs])                            # import each selected CSV file
{
print(i)
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
directory <- "specdata"
threshold <- 800
StnList <- complete(directory)                    # returns stations and their good obs
StnsAbove <- subset(StnList, nobs > threshold)    # station above threholds
SortedStns <- StnsAbove[order(StnsAbove[,"id"]),] # sort output by ID number
StnIDs <- SortedStns[,"id"]                       # vector of Station IDs to analyze
path <- paste(directory,"/", sep = "")            # full path to datafile directory
files <- list.files(path, pattern="*.csv")
source("complete.R")
directory <- "specdata"
threshold <- 800
StnList <- complete(directory)                    # returns stations and their good obs
StnsAbove <- subset(StnList, nobs > threshold)    # station above threholds
SortedStns <- StnsAbove[order(StnsAbove[,"id"]),] # sort output by ID number
StnIDs <- SortedStns[,"id"]                       # vector of Station IDs to analyze
path <- paste(directory,"/", sep = "")            # full path to datafile directory
files <- list.files(path, pattern="*.csv")
for(i in files[StnIDs])                            # import each selected CSV file
{
print(i)
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
for(i in files[StnIDs])                            # import each selected CSV file
{
print(i)
datafile <- read.csv(i)  # read each CSV file
print(datafile[1:3,"sulfate","nitrate"])
#                 perpos <- which(strsplit(file, "")[[1]]==".")
#                 assign(
#                         gsub(" ","",substr(file, 1, perpos-1)),
#                         filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
#
#                 good <- complete.cases(filedata) # creates logical vector of good cases
#                 good.filedata <- filedata[good,] # dataframe of good cases
#
#                 rows <- nrow(good.filedata)     # count good rows
#                 station <- filedata[1,"ID"]     # determine station ID
#
#                 result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
#
#                 StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
datafile <- read.csv(i)  # read each CSV file
datafile <- read.csv(paste(path,i,sep="")
datafile <- read.csv(paste(path,i,sep=""))  # read each CSV file
completedata <- complete(datafile)
completedata <- complete(directory,StnIDs)
View(completedata)
View(datafile)
?read.csv
source("complete.R")
directory <- "specdata"
threshold <- 800
StnList <- complete(directory)                    # returns stations and their good obs
StnsAbove <- subset(StnList, nobs > threshold)    # station above threholds
SortedStns <- StnsAbove[order(StnsAbove[,"id"]),] # sort output by ID number
StnIDs <- SortedStns[,"id"]                       # vector of Station IDs to analyze
path <- paste(directory,"/", sep = "")            # full path to datafile directory
files <- list.files(path, pattern="*.csv")
i <- files[1]
print(i)
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)
View(filedata)
good <- complete.cases(filedata)
completedata <- filedata[good,]
View(completedata)
cov(completedata)
View(completedata)
x <- completedata(,"sulfate")
x <- completedata[,"sulfate"]
x <- cbind(completedata[,"sulfate"],completedata[,"nitrate"])
View(x)
View(completedata)
cor(x)
cor(1:10, 2:11) # == 1
cor(completedata[,"sulfate"],completedata[,"nitrate"])
for(i in files[StnIDs])                            # import each selected CSV file
{
print(i)
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)  # read each CSV file
good <- complete.cases(filedata)         # creates logical vector of good cases
completedata <- filedata[good,]          # dataframe of good cases
correlation[i] <- cor(completedata[,"sulfate"],completedata[,"nitrate"])
}
correlations <- rep(NULL, length(StnIDs))
for(i in files[StnIDs])                            # import each selected CSV file
{
print(i)
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)  # read each CSV file
good <- complete.cases(filedata)         # creates logical vector of good cases
completedata <- filedata[good,]          # dataframe of good cases
correlations[i] <- cor(completedata[,"sulfate"],completedata[,"nitrate"])
}
for(i in files[StnIDs])                            # import each selected CSV file
{
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)  # read each CSV file
good <- complete.cases(filedata)         # creates logical vector of good cases
completedata <- filedata[good,]          # dataframe of good cases
correlations[i] <- cor(completedata[,"sulfate"],completedata[,"nitrate"])
print(i,correlations[i])
}
for(i in files[StnIDs])                            # import each selected CSV file
{
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)  # read each CSV file
good <- complete.cases(filedata)         # creates logical vector of good cases
completedata <- filedata[good,]          # dataframe of good cases
correlations[i] <- cor(completedata[,"sulfate"],completedata[,"nitrate"])
print(correlations[i])
}
for(i in files[StnIDs])                            # import each selected CSV file
{
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)  # read each CSV file
good <- complete.cases(filedata)         # creates logical vector of good cases
completedata <- filedata[good,]          # dataframe of good cases
correlations[i] <- cor(completedata[,"sulfate"],completedata[,"nitrate"])
print(correlations[i])
}
source("complete.R")
directory <- "specdata"
threshold <- 800
StnList <- complete(directory)                    # returns stations and their good obs
StnsAbove <- subset(StnList, nobs > threshold)    # station above threholds
SortedStns <- StnsAbove[order(StnsAbove[,"id"]),] # sort output by ID number
StnIDs <- SortedStns[,"id"]                       # vector of Station IDs to analyze
path <- paste(directory,"/", sep = "")            # full path to datafile directory
files <- list.files(path, pattern="*.csv")        # create list of data files in directory
# data <- data.frame(Date = NA, sulfate = NA, nitrate = NA, ID = NA)
# Empty dataframe to concatenate data files
correlations <- rep(NULL, length(StnIDs))
for(i in files[StnIDs])                            # import each selected CSV file
{
filedata <- read.csv(paste(path,i,sep=""),na.strings = "NA",)  # read each CSV file
good <- complete.cases(filedata)         # creates logical vector of good cases
completedata <- filedata[good,]          # dataframe of good cases
correlations[i] <- cor(completedata[,"sulfate"],completedata[,"nitrate"])
print(correlations[i])
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
length(cr)
setwd("~/CourseraHW/RprogrammingWeek2")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 30:25)
complete("specdata", 332:1)
source("complete.R")
directory <- "specdata"
id <-30:25
path <- paste(directory,"/", sep = "")          # full path to datafile directory
files <- list.files(path, pattern="*.csv")      # create list of data files
StnObsCntList <- data.frame(id = NA, nobs = NA) # create empty output dataframe
for(file in files[id])                          # import each selected CSV file
{
perpos <- which(strsplit(file, "")[[1]]==".")
assign(
gsub(" ","",substr(file, 1, perpos-1)),
filedata <- read.csv(paste(path,file,sep="")))  # read each CSV file
good <- complete.cases(filedata) # creates logical vector of good cases
good.filedata <- filedata[good,] # dataframe of good cases
rows <- nrow(good.filedata)     # count good rows
station <- filedata[1,"ID"]     # determine station ID
result <- data.frame(id = station, nobs = rows)  # create a row (station ID, rows)
StnObsCntList <- rbind(result,StnObsCntList)  # append data files together
}
StnObsCntList <- StnObsCntList[-nrow(StnObsCntList),]        # remove empty row from dataframe
View(StnObsCntList)
id
for(i in files[id]) {}
for(i in files[id])                          # import each selected CSV file
{
print(id)
}
for(i in files[id])                          # import each selected CSV file
{
print(i)
}
View(StnObsCntList)
View(good.filedata)
View(result)
View(StnObsCntList)
View(good.filedata)
View(StnObsCntList)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
id <- 1:332
length(id)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
directory <- "specdata"
path <- paste(directory,"/", sep = "")          # full path to datafile directory
files <- list.files(path, pattern="*.csv")
id <- 1:30
id_length <- length(id)
StnObsCntList <- data.frame(id = numeric(id_length), nobs = numeric(id_length))
View(StnObsCntList)
View(StnObsCntList)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
